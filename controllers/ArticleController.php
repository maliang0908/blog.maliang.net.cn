<?php
/**
 * Created by PhpStorm.
 * User: M
 * Date: 17/5/12
 * Time: 下午2:30
 */

namespace app\controllers;

use Yii;
use app\models\Article;
use yii\web\UploadedFile;
use app\models\UserDynamic;
use yii\data\ActiveDataProvider;
use yii\helpers\ArrayHelper;
use yii\web\NotFoundHttpException;

class ArticleController extends Controller
{
    public function beforeAction($action)
    {
        if($this->action->id == 'upload'){
            $this->enableCsrfValidation = false;
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * @return string
     */
    public function actionIndex()
    {
        $sort = Yii::$app->request->get('sort', 1);
        $query = UserDynamic::find()->innerJoinWith('user', 'article')->where([UserDynamic::tableName() . '.category' => UserDynamic::CATEGORY_ARTICLE]);
        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'pageSize' => 8,
                'totalCount' => $query->count()
            ]
        ]);
        if($sort && $field = ArrayHelper::getValue(Article::$sortFieldArray, $sort)){
            if($sort == Article::SORT_NEW){
                $query->orderBy([$field => SORT_DESC]);
            }else{
                $query->innerJoinWith(['article' => function($query) use($field){
                    $query->orderBy([$field => SORT_DESC]);
                }]);
            }
        }
        $article = $query->offset($dataProvider->pagination->offset)->limit($dataProvider->pagination->limit)->all();

        return $this->render('index',[
            'sort' => $sort,
            'article' => $article,
            'dataProvider' => $dataProvider
        ]);
    }

    /**
     * 文章详情
     * @param $id
     * @return string
     * @throws NotFoundHttpException
     */
    public function actionDetail($id)
    {
        $id = intval($id);
        if($id < 1){
            throw new NotFoundHttpException('非法请求');
        }
        $article = Article::findOne($id);
        $userDynamic = UserDynamic::find()->with('user')->where(['id' => $id])->one();
        if(!$userDynamic || !$article){
            throw new NotFoundHttpException('非法请求');
        }
        // 更新浏览量
        if($this->isBrowse($id)){
            $article->browse_num ++;
            $article->save(false);
        }
        return $this->render('detail',[
            'userDynamic' => $userDynamic,
            'article' => $article
        ]);
    }

    /**
     * 添加文章
     * @return string
     * @throws NotFoundHttpException
     */
    public function actionAdd()
    {
        return $this->save();
    }

    /**
     * 编辑文章
     * @param $id
     * @return string
     * @throws NotFoundHttpException
     */
    public function actionEdit($id)
    {
        $id = intval($id);
        if($id < 1){
            throw new NotFoundHttpException('非法请求');
        }
        return $this->save($id);
    }

    /**
     * 文章保存
     * @param int $id
     * @return string
     * @throws NotFoundHttpException
     * @throws \yii\db\Exception
     */
    public function save($id = 0)
    {
        if($id){
            $article =  Article::findOne($id);
            $userDynamic = UserDynamic::findOne($id);
            if(!$userDynamic || !$article){
                throw new NotFoundHttpException('非法请求');
            }
        }else{
            $article = new Article();
            $userDynamic = new UserDynamic();
        }
        $request = Yii::$app->request;
        if($request->isPost){
            if($article->load($request->post()) && $article->validate()){
                $trans = Yii::$app->db->beginTransaction();
                try{
                    $userDynamic->category = UserDynamic::CATEGORY_ARTICLE;
                    $userDynamic->save();
                    $article->id = $userDynamic->id;
                    $article->save();
                    $trans->commit();
                    return '成功';
                }catch (\Exception $e){
                    $trans->rollBack();
                }
            }
            throw new NotFoundHttpException('操作失败');
        }
        return $this->render('form', [
            'article' => $article
        ]);
    }

    /**
     * 上传图片
     * @return array
     */
    public function actionUpload()
    {
        Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;
        $uploadedFile = UploadedFile::getInstanceByName('file');
        $fileName = rand(999,9999).time() . '.' . $uploadedFile->getExtension();
        if($uploadedFile->saveAs(Yii::getAlias('@static') . '/' . $fileName)){
            return [
                'state' => 'success',
                'type' => $uploadedFile->type,
                'size' => $uploadedFile->size,
                'original' => $uploadedFile->name,
                'url' => $fileName,
                'title' => $fileName
            ];
        }else{
            return ['state' => ''];
        }
    }
}